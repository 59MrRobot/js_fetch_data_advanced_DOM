{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","ok","json","setTimeout","Error","status","statusText","elementMaker","className","title","data","document","body","insertAdjacentHTML","map","element","name","join","getFirstReceivedDetails","getAllSuccessfulDetails","getThreeFastestDetails","phones","Promise","race","phone","id","all"],"mappings":";AAAA,aAGA,IAAMA,EACF,mEAEEC,EAAU,WAACC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACdC,OAAAA,MAASH,GAAAA,OAAAA,GAAWE,OAAAA,EAApB,UACJE,KAAK,SAAAC,GACGA,OAAAA,EAASC,GACZD,EAASE,OACTC,WAAW,WACL,MAAA,IAAIC,MAASJ,GAAAA,OAAAA,EAASK,OAAYL,OAAAA,OAAAA,EAASM,cAChD,QAIX,SAASC,EAAaC,EAAWC,EAAOC,GACtCC,SAASC,KAAKC,mBAAmB,YACjBL,qBAAAA,OAAAA,EACNC,kBAAAA,OAAAA,EAEFC,+BAAAA,OAAAA,EAAKI,IAAI,SAAAC,GAAkBA,MAAAA,OAAAA,OAAAA,EAAQC,KAAnB,WAAgCC,KAAK,IAJ7D,kCAUF,IAAMC,EAA0B,WAAMtB,OAAAA,KAChCuB,EAA0B,WAAMvB,OAAAA,KAChCwB,EAAyB,WAAMxB,OAAAA,KAErCsB,IACGnB,KAAK,SAAAsB,GACGC,OAAAA,QAAQC,KAAKF,EAAOP,IAAI,SAAAU,GAAS5B,OAAAA,EAAY4B,IAAAA,OAAAA,EAAMC,UAE3D1B,KAAK,SAAAsB,GACJd,EAAa,iBAAkB,gBAAiB,CAACc,MAGrDF,IACGpB,KAAK,SAAAsB,GACGC,OAAAA,QAAQI,IAAIL,EAAOP,IAAI,SAAAU,GAAS5B,OAAAA,EAAY4B,IAAAA,OAAAA,EAAMC,UAE1D1B,KAAK,SAAAsB,GACJd,EAAa,iBAAkB,iBAAkBc,KAGrDD,IACGrB,KAAK,SAAAsB,GACGC,OAAAA,QAAQI,IAAI,CACjBJ,QAAQC,KAAKF,EAAOP,IAAI,SAAAU,GAAS5B,OAAAA,EAAY4B,IAAAA,OAAAA,EAAMC,QACnDH,QAAQC,KAAKF,EAAOP,IAAI,SAAAU,GAAS5B,OAAAA,EAAY4B,IAAAA,OAAAA,EAAMC,QACnDH,QAAQC,KAAKF,EAAOP,IAAI,SAAAU,GAAS5B,OAAAA,EAAY4B,IAAAA,OAAAA,EAAMC,YAGtD1B,KAAK,SAAAsB,GACJd,EAAa,gBAAiB,gBAAiBc","file":"main.b8d8e34f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst BASE_URL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nconst request = (url = '') => {\n  return fetch(`${BASE_URL}${url}.json`)\n    .then(response => {\n      return response.ok\n        ? response.json()\n        : setTimeout(() => {\n          throw new Error(`${response.status} - ${response.statusText}`);\n        }, 5000);\n    });\n};\n\nfunction elementMaker(className, title, data) {\n  document.body.insertAdjacentHTML('beforeend', `\n    <div class=\"${className}\">\n      <h3>${title}</h3>\n      <ul>\n        ${data.map(element => `<li>${element.name}</li>`).join('')}\n      </ul>\n    </div>\n  `);\n};\n\nconst getFirstReceivedDetails = () => request();\nconst getAllSuccessfulDetails = () => request();\nconst getThreeFastestDetails = () => request();\n\ngetFirstReceivedDetails()\n  .then(phones => {\n    return Promise.race(phones.map(phone => request(`/${phone.id}`)));\n  })\n  .then(phones => {\n    elementMaker('first-received', 'First Fastest', [phones]);\n  });\n\ngetAllSuccessfulDetails()\n  .then(phones => {\n    return Promise.all(phones.map(phone => request(`/${phone.id}`)));\n  })\n  .then(phones => {\n    elementMaker('all-successful', 'All Successful', phones);\n  });\n\ngetThreeFastestDetails()\n  .then(phones => {\n    return Promise.all([\n      Promise.race(phones.map(phone => request(`/${phone.id}`))),\n      Promise.race(phones.map(phone => request(`/${phone.id}`))),\n      Promise.race(phones.map(phone => request(`/${phone.id}`))),\n    ]);\n  })\n  .then(phones => {\n    elementMaker('three-fastest', 'Three Fastest', phones);\n  });\n"]}